// Generated by view binder compiler. Do not edit!
package com.downloaderpro.mrpro.demo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.downloaderpro.mrpro.demo.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemDownloadingBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageButton cancelDownloadImageBtn;

  @NonNull
  public final ProgressBar downloadProgress;

  @NonNull
  public final TextView downloadedAndTotalBytesTxt;

  @NonNull
  public final TextView downloadingSpeedAndStatusTxt;

  @NonNull
  public final TextView downloadingTitleTxt;

  @NonNull
  public final ImageButton pauseAndResumeImageBtn;

  private ItemDownloadingBinding(@NonNull CardView rootView,
      @NonNull ImageButton cancelDownloadImageBtn, @NonNull ProgressBar downloadProgress,
      @NonNull TextView downloadedAndTotalBytesTxt, @NonNull TextView downloadingSpeedAndStatusTxt,
      @NonNull TextView downloadingTitleTxt, @NonNull ImageButton pauseAndResumeImageBtn) {
    this.rootView = rootView;
    this.cancelDownloadImageBtn = cancelDownloadImageBtn;
    this.downloadProgress = downloadProgress;
    this.downloadedAndTotalBytesTxt = downloadedAndTotalBytesTxt;
    this.downloadingSpeedAndStatusTxt = downloadingSpeedAndStatusTxt;
    this.downloadingTitleTxt = downloadingTitleTxt;
    this.pauseAndResumeImageBtn = pauseAndResumeImageBtn;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemDownloadingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemDownloadingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_downloading, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemDownloadingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cancel_download_image_btn;
      ImageButton cancelDownloadImageBtn = ViewBindings.findChildViewById(rootView, id);
      if (cancelDownloadImageBtn == null) {
        break missingId;
      }

      id = R.id.download_progress;
      ProgressBar downloadProgress = ViewBindings.findChildViewById(rootView, id);
      if (downloadProgress == null) {
        break missingId;
      }

      id = R.id.downloaded_and_total_bytes_txt;
      TextView downloadedAndTotalBytesTxt = ViewBindings.findChildViewById(rootView, id);
      if (downloadedAndTotalBytesTxt == null) {
        break missingId;
      }

      id = R.id.downloading_speed_and_status_txt;
      TextView downloadingSpeedAndStatusTxt = ViewBindings.findChildViewById(rootView, id);
      if (downloadingSpeedAndStatusTxt == null) {
        break missingId;
      }

      id = R.id.downloading_title_txt;
      TextView downloadingTitleTxt = ViewBindings.findChildViewById(rootView, id);
      if (downloadingTitleTxt == null) {
        break missingId;
      }

      id = R.id.pause_and_resume_image_btn;
      ImageButton pauseAndResumeImageBtn = ViewBindings.findChildViewById(rootView, id);
      if (pauseAndResumeImageBtn == null) {
        break missingId;
      }

      return new ItemDownloadingBinding((CardView) rootView, cancelDownloadImageBtn,
          downloadProgress, downloadedAndTotalBytesTxt, downloadingSpeedAndStatusTxt,
          downloadingTitleTxt, pauseAndResumeImageBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
